# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
        autowire: true

    App\Application\Query\GetPosts\GetPostsHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'query.bus' }

    App\Application\Command\AddPosts\AddPostsHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'command.bus' }

    App\Application\Command\DeletePosts\DeletePostsHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'command.bus' }

    App\Application\Command\UpdatePosts\UpdatePostsHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'command.bus' }

    App\Application\Command\Registration\RegistrationHandler:
        tags:
            - { name: 'messenger.message_handler', bus: 'command.bus' }

    App\Infrastructure\Persistence\Doctrine\PostRepository: ~
    App\Infrastructure\Persistence\Doctrine\UserRepository: ~

    App\Domain\Repository\PostRepositoryInterface: '@App\Infrastructure\Persistence\Doctrine\PostRepository'
    App\Domain\Repository\UserRepositoryInterface: '@App\Infrastructure\Persistence\Doctrine\UserRepository'


    App\UI\Action\GetPostsAction:
        tags: ['controller.service_arguments']

    App\UI\Action\AddPostsAction:
        tags: [ 'controller.service_arguments' ]

    App\UI\Action\DeletePostsAction:
        tags: [ 'controller.service_arguments' ]

    App\UI\Action\UpdatePostsAction:
        tags: [ 'controller.service_arguments' ]

    App\UI\Action\RegistrationAction:
        tags: [ 'controller.service_arguments' ]


    App\Infrastructure\Listener\ValidationExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

